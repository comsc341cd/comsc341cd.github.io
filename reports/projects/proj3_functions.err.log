Traceback (most recent call last):
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tliu/.pyenv/versions/3.11.10/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def intent_to_treat(df, iv_col, outcome_col):
    """
    Calculate the intent-to-treat (ITT) estimate of iv_col on outcome_col.

    This should look very similar to our diff_in_means function from Project 1, but with a slightly different function signature.

    Args:
        df (pd.DataFrame): The input dataframe containing the treatment and outcome variables.
        iv_col (str): The name of the instrument variable in the dataframe.
        outcome_col (str): The name of the outcome variable in the dataframe.
    
    Returns:
        float: The ITT estimate of iv_col on outcome_col.
    """
    # TODO your code here
    pass

  
if __name__ == '__main__':
    test_df = pd.DataFrame({
        'T': [1, 0, 1, 0],
        'Z': [1, 0, 1, 1],
        'Y': [2, 1, 3, 2]
    })

    assert np.isclose(intent_to_treat(test_df, 'Z', 'Y'), (3+2+2)/3 - 1), "ITT estimate is incorrect"
    
    # these tests are not exhaustive, so adding additional asserts is recommended
    print("All asserts for intent_to_treat passed!")
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 26[0m
[1;32m     19[0m [38;5;28;01mif[39;00m [38;5;18m__name__[39m [38;5;241m==[39m [38;5;124m'[39m[38;5;124m__main__[39m[38;5;124m'[39m:
[1;32m     20[0m     test_df [38;5;241m=[39m pd[38;5;241m.[39mDataFrame({
[1;32m     21[0m         [38;5;124m'[39m[38;5;124mT[39m[38;5;124m'[39m: [[38;5;241m1[39m, [38;5;241m0[39m, [38;5;241m1[39m, [38;5;241m0[39m],
[1;32m     22[0m         [38;5;124m'[39m[38;5;124mZ[39m[38;5;124m'[39m: [[38;5;241m1[39m, [38;5;241m0[39m, [38;5;241m1[39m, [38;5;241m1[39m],
[1;32m     23[0m         [38;5;124m'[39m[38;5;124mY[39m[38;5;124m'[39m: [[38;5;241m2[39m, [38;5;241m1[39m, [38;5;241m3[39m, [38;5;241m2[39m]
[1;32m     24[0m     })
[0;32m---> 26[0m     [38;5;28;01massert[39;00m [43mnp[49m[38;5;241;43m.[39;49m[43misclose[49m[43m([49m[43mintent_to_treat[49m[43m([49m[43mtest_df[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mZ[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mY[39;49m[38;5;124;43m'[39;49m[43m)[49m[43m,[49m[43m [49m[43m([49m[38;5;241;43m3[39;49m[38;5;241;43m+[39;49m[38;5;241;43m2[39;49m[38;5;241;43m+[39;49m[38;5;241;43m2[39;49m[43m)[49m[38;5;241;43m/[39;49m[38;5;241;43m3[39;49m[43m [49m[38;5;241;43m-[39;49m[43m [49m[38;5;241;43m1[39;49m[43m)[49m, [38;5;124m"[39m[38;5;124mITT estimate is incorrect[39m[38;5;124m"[39m
[1;32m     28[0m     [38;5;66;03m# these tests are not exhaustive, so adding additional asserts is recommended[39;00m
[1;32m     29[0m     [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mAll asserts for intent_to_treat passed![39m[38;5;124m"[39m)

File [0;32m~/Github/comsc341-cd/venv/lib/python3.11/site-packages/numpy/_core/numeric.py:2461[0m, in [0;36misclose[0;34m(a, b, rtol, atol, equal_nan)[0m
[1;32m   2458[0m     y [38;5;241m=[39m [38;5;28mfloat[39m(y)
[1;32m   2460[0m [38;5;28;01mwith[39;00m errstate(invalid[38;5;241m=[39m[38;5;124m'[39m[38;5;124mignore[39m[38;5;124m'[39m), _no_nep50_warning():
[0;32m-> 2461[0m     result [38;5;241m=[39m (less_equal([38;5;28mabs[39m([43mx[49m[38;5;241;43m-[39;49m[43my[49m), atol [38;5;241m+[39m rtol [38;5;241m*[39m [38;5;28mabs[39m(y))
[1;32m   2462[0m               [38;5;241m&[39m isfinite(y)
[1;32m   2463[0m               [38;5;241m|[39m (x [38;5;241m==[39m y))
[1;32m   2464[0m     [38;5;28;01mif[39;00m equal_nan:
[1;32m   2465[0m         result [38;5;241m|[39m[38;5;241m=[39m isnan(x) [38;5;241m&[39m isnan(y)

[0;31mTypeError[0m: unsupported operand type(s) for -: 'NoneType' and 'float'

