Traceback (most recent call last):
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tliu/.pyenv/versions/3.11.10/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# %%time 
# TODO uncomment the above line once you have the code working to see how long it takes to run.

# TODO implement the code using the loop and .loc indexing.
T1_sum = 0
T0_sum = 0

# sum up the values of X for each treatment group by iterating over the rows of the DataFrame
# Python note: "_" is a convention for a variable that is not used in the loop
for _, row in df.iterrows():
    # TODO your code here
    pass

# calculate the mean of X for each treatment group
T1_mean = T1_sum / df[df["T"] == 1].shape[0]
T0_mean = T0_sum / df[df["T"] == 0].shape[0]

# the difference should be close to 10 for the simulated data
assert np.isclose(T1_mean - T0_mean, 10, atol=1e-2)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAssertionError[0m                            Traceback (most recent call last)
Cell [0;32mIn[4], line 19[0m
[1;32m     16[0m T0_mean [38;5;241m=[39m T0_sum [38;5;241m/[39m df[df[[38;5;124m"[39m[38;5;124mT[39m[38;5;124m"[39m] [38;5;241m==[39m [38;5;241m0[39m][38;5;241m.[39mshape[[38;5;241m0[39m]
[1;32m     18[0m [38;5;66;03m# the difference should be close to 10 for the simulated data[39;00m
[0;32m---> 19[0m [38;5;28;01massert[39;00m np[38;5;241m.[39misclose(T1_mean [38;5;241m-[39m T0_mean, [38;5;241m10[39m, atol[38;5;241m=[39m[38;5;241m1e-2[39m)

[0;31mAssertionError[0m: 

