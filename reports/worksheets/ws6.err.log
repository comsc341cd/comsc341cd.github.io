Traceback (most recent call last):
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tliu/.pyenv/versions/3.11.10/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/tliu/Github/comsc341-cd/venv/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def prepare_frdd_data(df, treatment_col, outcome_col, running_col, cutoff, bandwidth):
    """
    Prepare a dataframe for fuzzy regression discontinuity design estimation. Specifically:

    1. selects the data within the bandwidth of the cutoff
    2. creates the instrument Z as an indicator for whether the running variable is >= cutoff
    3. creates the covariates X1 and X2 as:
        - X1 = Z * (R - c)
        - X2 = (1-Z) * (R - c)
    Args:
        df (pd.DataFrame): The input data frame containing the variables.
        treatment_col (str): The name of the treatment variable.
        outcome_col (str): The name of the outcome variable.
        running_col (str): The name of the running variable.
        cutoff (float): The cutoff value for the running variable.
        bandwidth (float): The bandwidth for the fuzzy regression discontinuity design.

    Returns:
        pd.DataFrame: A dataframe with the selected data, the instrument Z, and the covariates X1 and X2
    """
    frdd_df = df.copy()

    # TODO select the data within the bandwidth of the cutoff

    # TODO create the instrument Z

    # TODO create covariates X1 and X2

    return frdd_df


if __name__ == "__main__":
    # Creates a simple dataset for testing
    test_df = pd.DataFrame({
        'Y': [1, 2, 3, 4, 5],
        'T': [0, 1, 0, 1, 1],
        'R': [0, 1, 2, 3, 4]
    })
    cutoff = 2
    bandwidth = 1
    
    frdd_df = prepare_frdd_data(test_df, 'T', 'Y', 'R', cutoff, bandwidth)

    assert frdd_df.shape[0] == 3, "The dataframe should have 3 rows, where the running variable is between 1 and 3"
    assert 'Z' in frdd_df.columns, "The dataframe should have a column for the instrument Z"
    assert 'X1' in frdd_df.columns, "The dataframe should have a column for the covariate X1"
    assert 'X2' in frdd_df.columns, "The dataframe should have a column for the covariate X2"

    # feel free to add more tests!
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAssertionError[0m                            Traceback (most recent call last)
Cell [0;32mIn[2], line 44[0m
[1;32m     40[0m bandwidth [38;5;241m=[39m [38;5;241m1[39m
[1;32m     42[0m frdd_df [38;5;241m=[39m prepare_frdd_data(test_df, [38;5;124m'[39m[38;5;124mT[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mY[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mR[39m[38;5;124m'[39m, cutoff, bandwidth)
[0;32m---> 44[0m [38;5;28;01massert[39;00m frdd_df[38;5;241m.[39mshape[[38;5;241m0[39m] [38;5;241m==[39m [38;5;241m3[39m, [38;5;124m"[39m[38;5;124mThe dataframe should have 3 rows, where the running variable is between 1 and 3[39m[38;5;124m"[39m
[1;32m     45[0m [38;5;28;01massert[39;00m [38;5;124m'[39m[38;5;124mZ[39m[38;5;124m'[39m [38;5;129;01min[39;00m frdd_df[38;5;241m.[39mcolumns, [38;5;124m"[39m[38;5;124mThe dataframe should have a column for the instrument Z[39m[38;5;124m"[39m
[1;32m     46[0m [38;5;28;01massert[39;00m [38;5;124m'[39m[38;5;124mX1[39m[38;5;124m'[39m [38;5;129;01min[39;00m frdd_df[38;5;241m.[39mcolumns, [38;5;124m"[39m[38;5;124mThe dataframe should have a column for the covariate X1[39m[38;5;124m"[39m

[0;31mAssertionError[0m: The dataframe should have 3 rows, where the running variable is between 1 and 3

